dashboards:
  SCAD CONTAINERS COST ALLOCATION:
    dependsOn:
      datasets:
      - scad_cca_summary_view
    name: SCAD Containers Cost Allocation
    dashboardId: scad-containers-cost-allocation
    category: Additional
    templateId: scad-containers-cost-allocation
datasets:
  scad_cca_summary_view:
    data:
      DataSetId: 12f5c7ba-2b76-40e0-b280-0aabe8ca2fbe
      Name: scad_cca_summary_view
      PhysicalTableMap:
        320f3b02-0ba2-4d14-b684-1a5431781f39:
          RelationalTable:
            DataSourceArn: ${athena_datasource_arn}
            Catalog: AwsDataCatalog
            Schema: ${athena_database_name}
            Name: account_map
            InputColumns:
            - Name: account_id
              Type: STRING
            - Name: account_name
              Type: STRING
        40065454-2867-4119-8240-618f4332aa7e:
          RelationalTable:
            DataSourceArn: ${athena_datasource_arn}
            Catalog: AwsDataCatalog
            Schema: ${athena_database_name}
            Name: scad_cca_summary_view
            InputColumns:
            - Name: usage_date
              Type: DATETIME
            - Name: resource_id
              Type: STRING
            - Name: node_instance_id
              Type: STRING
            - Name: node_purchase_option
              Type: STRING
            - Name: controller_name
              Type: STRING
            - Name: namespace
              Type: STRING
            - Name: time_granularity
              Type: STRING
            - Name: year
              Type: STRING
            - Name: month
              Type: STRING
            - Name: billing_period
              Type: DATETIME
            - Name: charge_type
              Type: STRING
            - Name: payer_account_id
              Type: STRING
            - Name: linked_account_id
              Type: STRING
            - Name: region
              Type: STRING
            - Name: availability_zone
              Type: STRING
            - Name: cluster_type
              Type: STRING
            - Name: launch_type
              Type: STRING
            - Name: cluster_arn
              Type: STRING
            - Name: cluster_name
              Type: STRING
            - Name: node_name
              Type: STRING
            - Name: node_vcpu
              Type: DECIMAL
              SubType: FLOAT
            - Name: node_memory_gib
              Type: DECIMAL
              SubType: FLOAT
            - Name: node_gpu
              Type: DECIMAL
              SubType: FLOAT
            - Name: node_instance_type
              Type: STRING
            - Name: node_instance_family
              Type: STRING
            - Name: node_instance_type_family
              Type: STRING
            - Name: node_os
              Type: STRING
            - Name: node_physical_processor_family
              Type: STRING
            - Name: node_physical_processor
              Type: STRING
            - Name: ecs_service
              Type: STRING
            - Name: ecs_task_id
              Type: STRING
            - Name: batch_compute_environment
              Type: STRING
            - Name: batch_job_definition
              Type: STRING
            - Name: batch_job_definition_name
              Type: STRING
            - Name: batch_job_definition_revision
              Type: STRING
            - Name: batch_job_queue
              Type: STRING
            - Name: controller_kind
              Type: STRING
            - Name: deployment
              Type: STRING
            - Name: daemonset
              Type: STRING
            - Name: statefulset
              Type: STRING
            - Name: replicaset
              Type: STRING
            - Name: job
              Type: STRING
            - Name: replication_controller
              Type: STRING
            - Name: pod_name
              Type: STRING
            - Name: pod_uid
              Type: STRING
            - Name: cpu_allocation
              Type: DECIMAL
              SubType: FLOAT
            - Name: memory_allocation
              Type: DECIMAL
              SubType: FLOAT
            - Name: gpu_allocation
              Type: DECIMAL
              SubType: FLOAT
            - Name: cpu_usage
              Type: DECIMAL
              SubType: FLOAT
            - Name: memory_usage
              Type: DECIMAL
              SubType: FLOAT
            - Name: max_cpu_allocation_vs_cpu_usage
              Type: DECIMAL
              SubType: FLOAT
            - Name: max_memory_allocation_vs_memory_usage
              Type: DECIMAL
              SubType: FLOAT
            - Name: max_gpu_allocation_vs_cpu_usage
              Type: DECIMAL
              SubType: FLOAT
            - Name: cpu_split_ratio
              Type: DECIMAL
              SubType: FLOAT
            - Name: memory_split_ratio
              Type: DECIMAL
              SubType: FLOAT
            - Name: gpu_split_ratio
              Type: DECIMAL
              SubType: FLOAT
            - Name: usage_quantity
              Type: DECIMAL
              SubType: FLOAT
            - Name: amortized_split_cpu_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: amortized_split_memory_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: amortized_split_gpu_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: amortized_split_unused_cpu_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: amortized_split_unused_memory_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: amortized_split_unused_gpu_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: net_amortized_split_cpu_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: net_amortized_split_memory_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: net_amortized_split_gpu_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: net_amortized_split_unused_cpu_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: net_amortized_split_unused_memory_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: net_amortized_split_unused_gpu_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: public_on_demand_split_cpu_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: public_on_demand_split_memory_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: public_on_demand_split_gpu_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: public_on_demand_split_unused_cpu_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: public_on_demand_split_unused_memory_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: public_on_demand_split_unused_gpu_cost
              Type: DECIMAL
              SubType: FLOAT
      LogicalTableMap:
        3cc8aead-25e1-425f-9025-b9b71cb4c000:
          Alias: Intermediate Table
          DataTransforms:
          - TagColumnOperation:
              ColumnName: region
              Tags:
              - ColumnGeographicRole: STATE
          - ProjectOperation:
              ProjectedColumns:
              - usage_date
              - resource_id
              - node_instance_id
              - node_purchase_option
              - controller_name
              - namespace
              - time_granularity
              - year
              - month
              - billing_period
              - charge_type
              - payer_account_id
              - linked_account_id
              - region
              - availability_zone
              - cluster_type
              - launch_type
              - cluster_arn
              - cluster_name
              - node_name
              - node_vcpu
              - node_memory_gib
              - node_gpu
              - node_instance_type
              - node_instance_family
              - node_instance_type_family
              - node_os
              - node_physical_processor_family
              - node_physical_processor
              - ecs_service
              - ecs_task_id
              - batch_compute_environment
              - batch_job_definition
              - batch_job_definition_name
              - batch_job_definition_revision
              - batch_job_queue
              - controller_kind
              - deployment
              - daemonset
              - statefulset
              - replicaset
              - job
              - replication_controller
              - pod_name
              - pod_uid
              - cpu_allocation
              - memory_allocation
              - gpu_allocation
              - cpu_usage
              - memory_usage
              - max_cpu_allocation_vs_cpu_usage
              - max_memory_allocation_vs_memory_usage
              - max_gpu_allocation_vs_cpu_usage
              - cpu_split_ratio
              - memory_split_ratio
              - gpu_split_ratio
              - usage_quantity
              - amortized_split_cpu_cost
              - amortized_split_memory_cost
              - amortized_split_gpu_cost
              - amortized_split_unused_cpu_cost
              - amortized_split_unused_memory_cost
              - amortized_split_unused_gpu_cost
              - net_amortized_split_cpu_cost
              - net_amortized_split_memory_cost
              - net_amortized_split_gpu_cost
              - net_amortized_split_unused_cpu_cost
              - net_amortized_split_unused_memory_cost
              - net_amortized_split_unused_gpu_cost
              - public_on_demand_split_cpu_cost
              - public_on_demand_split_memory_cost
              - public_on_demand_split_gpu_cost
              - public_on_demand_split_unused_cpu_cost
              - public_on_demand_split_unused_memory_cost
              - public_on_demand_split_unused_gpu_cost
              - account_id
              - account_name
          Source:
            JoinInstruction:
              LeftOperand: 58a475ca-a409-495a-b515-7b43b30f2841
              RightOperand: e45f1760-362a-4f7c-a3b1-354efa148c5d
              Type: LEFT
              OnClause: '{linked_account_id} = {account_id}'
        58a475ca-a409-495a-b515-7b43b30f2841:
          Alias: scad_cca_summary_view
          Source:
            PhysicalTableId: 40065454-2867-4119-8240-618f4332aa7e
        e45f1760-362a-4f7c-a3b1-354efa148c5d:
          Alias: account_map
          Source:
            PhysicalTableId: 320f3b02-0ba2-4d14-b684-1a5431781f39
      ImportMode: SPICE
    dependsOn:
      views:
      - account_map
      - scad_cca_summary_view
    schedules:
    - default
crawlers: {}
views:
  scad_cca_summary_view:
    dependsOn:
      cur2:
      - bill_billing_period_start_date
      - bill_payer_account_id
      - identity_time_interval
      - line_item_availability_zone
      - line_item_line_item_type
      - line_item_operation
      - line_item_resource_id
      - line_item_unblended_cost
      - line_item_usage_account_id
      - line_item_usage_amount
      - line_item_usage_start_date
      - line_item_usage_type
      - pricing_public_on_demand_cost
      - product
      - product_instance_type
      - product_product_family
      - reservation_reservation_a_r_n
      - resource_tags
      - savings_plan_savings_plan_a_r_n
      - savings_plan_savings_plan_effective_cost
      - split_line_item_parent_resource_id
      - split_line_item_reserved_usage
      - split_line_item_actual_usage
      - split_line_item_split_usage
      - split_line_item_split_usage_ratio
      - split_line_item_split_cost
      - split_line_item_unused_cost
      - split_line_item_net_split_cost
      - split_line_item_net_unused_cost
      - split_line_item_public_on_demand_split_cost
      - split_line_item_public_on_demand_unused_cost
      - line_item_net_unblended_cost
      - product_instance_family
      - savings_plan_net_savings_plan_effective_cost
      - data
      - billing_period
    data: |-
      CREATE OR REPLACE VIEW "${athena_database_name}".scad_cca_summary_view AS
      SELECT
        (CASE WHEN (DATE_TRUNC('day', "t_scad_cca"."line_item_usage_start_date") >= (DATE_TRUNC('day', current_timestamp) - INTERVAL  '7' DAY)) THEN "t_scad_cca"."line_item_usage_start_date" WHEN (DATE_TRUNC('month', "t_scad_cca"."line_item_usage_start_date") >= (DATE_TRUNC('month', current_timestamp) - INTERVAL  '3' MONTH)) THEN DATE_TRUNC('day', "t_scad_cca"."line_item_usage_start_date") ELSE DATE_TRUNC('month', "t_scad_cca"."line_item_usage_start_date") END) "usage_date"
      , (CASE WHEN (DATE_TRUNC('day', "t_scad_cca"."line_item_usage_start_date") >= (DATE_TRUNC('day', current_timestamp) - INTERVAL  '7' DAY)) THEN "t_scad_cca"."line_item_resource_id" ELSE null END) "resource_id"
      , (CASE WHEN ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'ECSTask-EC2')) THEN (CASE WHEN (COALESCE("t_scad_cca"."split_line_item_parent_resource_id", '') = '') THEN 'Parent Instance ID Not Found' ELSE "t_scad_cca"."split_line_item_parent_resource_id" END) ELSE 'Non-EC2-Workload' END) "node_instance_id"
      , (CASE WHEN ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'ECSTask-EC2')) THEN (CASE WHEN (COALESCE("t_ec2_compute_instances"."purchase_option", '') = '') THEN 'Parent Instance ID Not Found' ELSE "t_ec2_compute_instances"."purchase_option" END) ELSE (CASE WHEN ("t_scad_cca"."savings_plan_savings_plan_a_r_n" <> '') THEN 'Savings Plans' WHEN ("t_scad_cca"."line_item_usage_type" LIKE '%Spot%') THEN 'Spot' ELSE 'On-Demand' END) END) "node_purchase_option"
      , (CASE WHEN ((COALESCE("t_scad_cca"."resource_tags"['aws_eks_workload_name'], '') = '') AND ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'FargatePod'))) THEN 'Uncontrolled Workload' WHEN ((COALESCE("t_scad_cca"."resource_tags"['aws_eks_workload_name'], '') = '') AND ("t_scad_cca"."line_item_operation" IN ('ECSTask-EC2', 'FargateTask'))) THEN 'Non-EKS-Workload' ELSE "t_scad_cca"."resource_tags"['aws_eks_workload_name'] END) "controller_name"
      , (CASE WHEN ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'FargatePod')) THEN SPLIT_PART("t_scad_cca"."line_item_resource_id", '/', 3) ELSE 'Non-EKS-Workload' END) "namespace"
      , ARBITRARY((CASE WHEN (DATE_TRUNC('day', "t_scad_cca"."line_item_usage_start_date") >= (DATE_TRUNC('day', current_timestamp) - INTERVAL  '7' DAY)) THEN 'hourly' WHEN (DATE_TRUNC('month', "t_scad_cca"."line_item_usage_start_date") >= (DATE_TRUNC('month', current_timestamp) - INTERVAL  '3' MONTH)) THEN 'daily' ELSE 'monthly' END)) "time_granularity"
      , ARBITRARY(SPLIT_PART("t_scad_cca"."billing_period", '-', 1)) "year"
      , ARBITRARY(SPLIT_PART("t_scad_cca"."billing_period", '-', 2)) "month"
      , ARBITRARY("t_scad_cca"."bill_billing_period_start_date") "billing_period"
      , ARBITRARY("t_scad_cca"."line_item_line_item_type") "charge_type"
      , ARBITRARY("t_scad_cca"."bill_payer_account_id") "payer_account_id"
      , ARBITRARY("t_scad_cca"."line_item_usage_account_id") "linked_account_id"
      , ARBITRARY("t_scad_cca"."product"['region']) "region"
      , ARBITRARY((CASE WHEN (("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'ECSTask-EC2')) AND (COALESCE("t_scad_cca"."line_item_availability_zone", '') <> '')) THEN "t_scad_cca"."line_item_availability_zone" WHEN (("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'ECSTask-EC2')) AND (COALESCE("t_scad_cca"."line_item_availability_zone", '') = '')) THEN (CASE WHEN (COALESCE("t_ec2_compute_instances"."line_item_availability_zone", '') = '') THEN 'Parent Instance ID Not Found' ELSE "t_ec2_compute_instances"."line_item_availability_zone" END) ELSE 'Non-EC2-Workload' END)) "availability_zone"
      , ARBITRARY(UPPER(SPLIT_PART("t_scad_cca"."line_item_resource_id", ':', 3))) "cluster_type"
      , ARBITRARY((CASE WHEN ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'ECSTask-EC2')) THEN 'EC2' ELSE 'Fargate' END)) "launch_type"
      , ARBITRARY((CASE WHEN ("t_scad_cca"."line_item_operation" = 'EKSPod-EC2') THEN CONCAT(REPLACE(SPLIT_PART("t_scad_cca"."line_item_resource_id", '/', 1), 'pod', 'cluster'), '/', SPLIT_PART("t_scad_cca"."line_item_resource_id", '/', 2)) ELSE CONCAT(REPLACE(SPLIT_PART("t_scad_cca"."line_item_resource_id", '/', 1), 'task', 'cluster'), '/', SPLIT_PART("t_scad_cca"."line_item_resource_id", '/', 2)) END)) "cluster_arn"
      , ARBITRARY(SPLIT_PART("t_scad_cca"."line_item_resource_id", '/', 2)) "cluster_name"
      , ARBITRARY((CASE WHEN ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'FargatePod')) THEN "t_scad_cca"."resource_tags"['aws_eks_node'] ELSE 'Non-EKS-Workload' END)) "node_name"
      , ARBITRARY("t_ec2_compute_instances"."product_vcpu") "node_vcpu"
      , ARBITRARY("t_ec2_compute_instances"."product_memory") "node_memory_gib"
      , ARBITRARY("t_ec2_compute_instances"."product_gpu") "node_gpu"
      , ARBITRARY((CASE WHEN ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'ECSTask-EC2')) THEN (CASE WHEN (COALESCE("t_ec2_compute_instances"."product_instance_type", '') = '') THEN 'Parent Instance ID Not Found' ELSE "t_ec2_compute_instances"."product_instance_type" END) ELSE 'Non-EC2-Workload' END)) "node_instance_type"
      , ARBITRARY((CASE WHEN ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'ECSTask-EC2')) THEN (CASE WHEN (COALESCE("t_ec2_compute_instances"."product_instance_family", '') = '') THEN 'Parent Instance ID Not Found' ELSE "t_ec2_compute_instances"."product_instance_family" END) ELSE 'Non-EC2-Workload' END)) "node_instance_family"
      , ARBITRARY((CASE WHEN ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'ECSTask-EC2')) THEN (CASE WHEN (COALESCE("t_ec2_compute_instances"."product_instance_type_family", '') = '') THEN 'Parent Instance ID Not Found' ELSE "t_ec2_compute_instances"."product_instance_type_family" END) ELSE 'Non-EC2-Workload' END)) "node_instance_type_family"
      , ARBITRARY((CASE WHEN ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'ECSTask-EC2')) THEN (CASE WHEN (COALESCE("t_ec2_compute_instances"."product_operating_system", '') = '') THEN 'Parent Instance ID Not Found' ELSE "t_ec2_compute_instances"."product_operating_system" END) ELSE 'Non-EC2-Workload' END)) "node_os"
      , ARBITRARY((CASE WHEN ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'ECSTask-EC2')) THEN (CASE WHEN (COALESCE("t_ec2_compute_instances"."physical_processor_family", '') = '') THEN 'Parent Instance ID Not Found' ELSE "t_ec2_compute_instances"."physical_processor_family" END) ELSE 'Non-EC2-Workload' END)) "node_physical_processor_family"
      , ARBITRARY((CASE WHEN ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'ECSTask-EC2')) THEN (CASE WHEN (COALESCE("t_ec2_compute_instances"."physical_processor", '') = '') THEN 'Parent Instance ID Not Found' ELSE "t_ec2_compute_instances"."physical_processor" END) ELSE 'Non-EC2-Workload' END)) "node_physical_processor"
      , ARBITRARY((CASE WHEN ((COALESCE("t_scad_cca"."resource_tags"['aws_ecs_service_name'], '') = '') AND ("t_scad_cca"."line_item_operation" IN ('ECSTask-EC2', 'FargateTask'))) THEN 'No ECS Service' WHEN ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'FargatePod')) THEN 'Non-ECS-Workload' ELSE "t_scad_cca"."resource_tags"['aws_ecs_service_name'] END)) "ecs_service"
      , ARBITRARY((CASE WHEN (DATE_TRUNC('day', "t_scad_cca"."line_item_usage_start_date") >= (DATE_TRUNC('day', current_timestamp) - INTERVAL  '7' DAY)) THEN (CASE WHEN ("line_item_operation" IN ('ECSTask-EC2', 'FargateTask')) THEN SPLIT_PART("t_scad_cca"."line_item_resource_id", '/', 3) ELSE 'Non-ECS-Workload' END) ELSE null END)) "ecs_task_id"
      , ARBITRARY((CASE WHEN ((("t_scad_cca"."line_item_operation" IN ('ECSTask-EC2', 'FargateTask')) AND (COALESCE("t_scad_cca"."resource_tags"['aws_batch_compute_environment'], '') = '')) OR ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'FargatePod'))) THEN 'Non-Batch-Workload' ELSE "t_scad_cca"."resource_tags"['aws_batch_compute_environment'] END)) "batch_compute_environment"
      , ARBITRARY((CASE WHEN ((("t_scad_cca"."line_item_operation" IN ('ECSTask-EC2', 'FargateTask')) AND (COALESCE("t_scad_cca"."resource_tags"['aws_batch_job_definition'], '') = '')) OR ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'FargatePod'))) THEN 'Non-Batch-Workload' ELSE "t_scad_cca"."resource_tags"['aws_batch_job_definition'] END)) "batch_job_definition"
      , ARBITRARY((CASE WHEN ((("t_scad_cca"."line_item_operation" IN ('ECSTask-EC2', 'FargateTask')) AND (COALESCE("t_scad_cca"."resource_tags"['aws_batch_job_definition'], '') = '')) OR ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'FargatePod'))) THEN 'Non-Batch-Workload' ELSE SPLIT_PART("t_scad_cca"."resource_tags"['aws_batch_job_definition'], ':', 1) END)) "batch_job_definition_name"
      , ARBITRARY((CASE WHEN ((("t_scad_cca"."line_item_operation" IN ('ECSTask-EC2', 'FargateTask')) AND (COALESCE("t_scad_cca"."resource_tags"['aws_batch_job_definition'], '') = '')) OR ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'FargatePod'))) THEN 'Non-Batch-Workload' ELSE SPLIT_PART("t_scad_cca"."resource_tags"['aws_batch_job_definition'], ':', 2) END)) "batch_job_definition_revision"
      , ARBITRARY((CASE WHEN ((("t_scad_cca"."line_item_operation" IN ('ECSTask-EC2', 'FargateTask')) AND (COALESCE("t_scad_cca"."resource_tags"['aws_batch_job_queue'], '') = '')) OR ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'FargatePod'))) THEN 'Non-Batch-Workload' ELSE "t_scad_cca"."resource_tags"['aws_batch_job_queue'] END)) "batch_job_queue"
      , ARBITRARY((CASE WHEN ((COALESCE("t_scad_cca"."resource_tags"['aws_eks_workload_type'], '') = '') AND ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'FargatePod'))) THEN 'Uncontrolled Workload' WHEN ((COALESCE("t_scad_cca"."resource_tags"['aws_eks_workload_type'], '') = '') AND ("t_scad_cca"."line_item_operation" IN ('ECSTask-EC2', 'FargateTask'))) THEN 'Non-EKS-Workload' ELSE "t_scad_cca"."resource_tags"['aws_eks_workload_type'] END)) "controller_kind"
      , ARBITRARY((CASE WHEN ((COALESCE("t_scad_cca"."resource_tags"['aws_eks_workload_type'], '') = '') AND ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'FargatePod'))) THEN 'Uncontrolled Workload' WHEN ((COALESCE("t_scad_cca"."resource_tags"['aws_eks_workload_type'], '') = '') AND ("t_scad_cca"."line_item_operation" IN ('ECSTask-EC2', 'FargateTask'))) THEN 'Non-EKS-Workload' WHEN ("t_scad_cca"."resource_tags"['aws_eks_workload_type'] = 'ReplicaSet') THEN "t_scad_cca"."resource_tags"['aws_eks_deployment'] ELSE 'Non-Deployment-Workload' END)) "deployment"
      , ARBITRARY((CASE WHEN ((COALESCE("t_scad_cca"."resource_tags"['aws_eks_workload_type'], '') = '') AND ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'FargatePod'))) THEN 'Uncontrolled Workload' WHEN ((COALESCE("t_scad_cca"."resource_tags"['aws_eks_workload_type'], '') = '') AND ("t_scad_cca"."line_item_operation" IN ('ECSTask-EC2', 'FargateTask'))) THEN 'Non-EKS-Workload' WHEN ("t_scad_cca"."resource_tags"['aws_eks_workload_type'] = 'DaemonSet') THEN "t_scad_cca"."resource_tags"['aws_eks_workload_name'] ELSE 'Non-DaemonSet-Workload' END)) "daemonset"
      , ARBITRARY((CASE WHEN ((COALESCE("t_scad_cca"."resource_tags"['aws_eks_workload_type'], '') = '') AND ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'FargatePod'))) THEN 'Uncontrolled Workload' WHEN ((COALESCE("t_scad_cca"."resource_tags"['aws_eks_workload_type'], '') = '') AND ("t_scad_cca"."line_item_operation" IN ('ECSTask-EC2', 'FargateTask'))) THEN 'Non-EKS-Workload' WHEN ("t_scad_cca"."resource_tags"['aws_eks_workload_type'] = 'StatefulSet') THEN "t_scad_cca"."resource_tags"['aws_eks_workload_name'] ELSE 'Non-StatefulSet-Workload' END)) "statefulset"
      , ARBITRARY((CASE WHEN ((COALESCE("t_scad_cca"."resource_tags"['aws_eks_workload_type'], '') = '') AND ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'FargatePod'))) THEN 'Uncontrolled Workload' WHEN ((COALESCE("t_scad_cca"."resource_tags"['aws_eks_workload_type'], '') = '') AND ("t_scad_cca"."line_item_operation" IN ('ECSTask-EC2', 'FargateTask'))) THEN 'Non-EKS-Workload' WHEN ("t_scad_cca"."resource_tags"['aws_eks_workload_type'] = 'ReplicaSet') THEN "t_scad_cca"."resource_tags"['aws_eks_workload_name'] ELSE 'Non-ReplicaSet-Workload' END)) "replicaset"
      , ARBITRARY((CASE WHEN ((COALESCE("t_scad_cca"."resource_tags"['aws_eks_workload_type'], '') = '') AND ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'FargatePod'))) THEN 'Uncontrolled Workload' WHEN ((COALESCE("t_scad_cca"."resource_tags"['aws_eks_workload_type'], '') = '') AND ("t_scad_cca"."line_item_operation" IN ('ECSTask-EC2', 'FargateTask'))) THEN 'Non-EKS-Workload' WHEN ("t_scad_cca"."resource_tags"['aws_eks_workload_type'] = 'Job') THEN "t_scad_cca"."resource_tags"['aws_eks_workload_name'] ELSE 'Non-Job-Workload' END)) "job"
      , ARBITRARY((CASE WHEN ((COALESCE("t_scad_cca"."resource_tags"['aws_eks_workload_type'], '') = '') AND ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'FargatePod'))) THEN 'Uncontrolled Workload' WHEN ((COALESCE("t_scad_cca"."resource_tags"['aws_eks_workload_type'], '') = '') AND ("t_scad_cca"."line_item_operation" IN ('ECSTask-EC2', 'FargateTask'))) THEN 'Non-EKS-Workload' WHEN ("t_scad_cca"."resource_tags"['aws_eks_workload_type'] = 'ReplicationController') THEN "t_scad_cca"."resource_tags"['aws_eks_workload_name'] ELSE 'Non-ReplicationController-Workload' END)) "replication_controller"
      , ARBITRARY((CASE WHEN (DATE_TRUNC('day', "t_scad_cca"."line_item_usage_start_date") >= (DATE_TRUNC('day', current_timestamp) - INTERVAL  '7' DAY)) THEN (CASE WHEN ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'FargatePod')) THEN SPLIT_PART("t_scad_cca"."line_item_resource_id", '/', 4) ELSE 'Non-EKS-Workload' END) ELSE null END)) "pod_name"
      , ARBITRARY((CASE WHEN (DATE_TRUNC('day', "t_scad_cca"."line_item_usage_start_date") >= (DATE_TRUNC('day', current_timestamp) - INTERVAL  '7' DAY)) THEN (CASE WHEN ("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'FargatePod')) THEN SPLIT_PART("t_scad_cca"."line_item_resource_id", '/', 5) ELSE 'Non-EKS-Workload' END) ELSE null END)) "pod_uid"
      , MAX((CASE WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-vCPU-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-vCPU-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%Fargate-vCPU-Hours:perCPU')) THEN "t_scad_cca"."split_line_item_reserved_usage" ELSE 0E0 END)) "cpu_allocation"
      , MAX((CASE WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-GB-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-GB-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%Fargate-GB-Hours')) THEN "t_scad_cca"."split_line_item_reserved_usage" ELSE 0E0 END)) "memory_allocation"
      , MAX((CASE WHEN ("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-Accelerator-Hours') THEN "t_scad_cca"."split_line_item_reserved_usage" ELSE 0E0 END)) "gpu_allocation"
      , (AVG((CASE WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-vCPU-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-vCPU-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%Fargate-vCPU-Hours:perCPU')) THEN "t_scad_cca"."split_line_item_actual_usage" ELSE 0E0 END)) * 2) "cpu_usage"
      , (AVG((CASE WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-GB-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-GB-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%Fargate-GB-Hours')) THEN "t_scad_cca"."split_line_item_actual_usage" ELSE 0E0 END)) * 2) "memory_usage"
      , (AVG((CASE WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-vCPU-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-vCPU-Hours')) THEN "t_scad_cca"."split_line_item_split_usage" ELSE 0E0 END)) * 2) "max_cpu_allocation_vs_cpu_usage"
      , (AVG((CASE WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-GB-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-GB-Hours')) THEN "t_scad_cca"."split_line_item_split_usage" ELSE 0E0 END)) * 2) "max_memory_allocation_vs_memory_usage"
      , (AVG((CASE WHEN ("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-Accelerator-Hours') THEN "t_scad_cca"."split_line_item_split_usage" ELSE 0E0 END)) * 2) "max_gpu_allocation_vs_cpu_usage"
      , MAX((CASE WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-vCPU-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-vCPU-Hours')) THEN "t_scad_cca"."split_line_item_split_usage_ratio" ELSE 0E0 END)) "cpu_split_ratio"
      , MAX((CASE WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-GB-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-GB-Hours')) THEN "t_scad_cca"."split_line_item_split_usage_ratio" ELSE 0E0 END)) "memory_split_ratio"
      , MAX((CASE WHEN ("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-Accelerator-Hours') THEN "t_scad_cca"."split_line_item_split_usage_ratio" ELSE 0E0 END)) "gpu_split_ratio"
      , SUM(("t_scad_cca"."line_item_usage_amount" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount"))) "usage_quantity"
      , SUM((CASE WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-vCPU-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-vCPU-Hours')) THEN ("t_scad_cca"."split_line_item_split_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) WHEN ("t_scad_cca"."line_item_usage_type" LIKE '%Fargate-vCPU-Hours:perCPU') THEN (CASE WHEN ("t_scad_cca"."line_item_line_item_type" = 'SavingsPlanCoveredUsage') THEN "t_scad_cca"."savings_plan_savings_plan_effective_cost" ELSE "t_scad_cca"."line_item_unblended_cost" END) ELSE 0E0 END)) "amortized_split_cpu_cost"
      , SUM((CASE WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-GB-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-GB-Hours')) THEN ("t_scad_cca"."split_line_item_split_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) WHEN ("t_scad_cca"."line_item_usage_type" LIKE '%Fargate-GB-Hours') THEN (CASE WHEN ("t_scad_cca"."line_item_line_item_type" = 'SavingsPlanCoveredUsage') THEN "t_scad_cca"."savings_plan_savings_plan_effective_cost" ELSE "t_scad_cca"."line_item_unblended_cost" END) ELSE 0E0 END)) "amortized_split_memory_cost"
      , SUM((CASE WHEN ("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-Accelerator-Hours') THEN ("t_scad_cca"."split_line_item_split_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) ELSE 0E0 END)) "amortized_split_gpu_cost"
      , SUM((CASE WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-vCPU-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-vCPU-Hours')) THEN ("t_scad_cca"."split_line_item_unused_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) ELSE 0E0 END)) "amortized_split_unused_cpu_cost"
      , SUM((CASE WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-GB-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-GB-Hours')) THEN ("t_scad_cca"."split_line_item_unused_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) ELSE 0E0 END)) "amortized_split_unused_memory_cost"
      , SUM((CASE WHEN ("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-Accelerator-Hours') THEN ("t_scad_cca"."split_line_item_unused_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) ELSE 0E0 END)) "amortized_split_unused_gpu_cost"
      , SUM((CASE WHEN ((("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-vCPU-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-vCPU-Hours')) AND (COALESCE("t_scad_cca"."split_line_item_net_split_cost", 0E0) > 0E0)) THEN ("t_scad_cca"."split_line_item_net_split_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) WHEN ((("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-vCPU-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-vCPU-Hours')) AND (COALESCE("t_scad_cca"."split_line_item_net_split_cost", 0E0) = 0E0)) THEN ("t_scad_cca"."split_line_item_split_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%Fargate-vCPU-Hours:perCPU') AND (COALESCE("t_scad_cca"."line_item_net_unblended_cost", 0E0) > 0E0)) THEN (CASE WHEN ("t_scad_cca"."line_item_line_item_type" = 'SavingsPlanCoveredUsage') THEN "t_scad_cca"."savings_plan_net_savings_plan_effective_cost" ELSE "t_scad_cca"."line_item_net_unblended_cost" END) WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%Fargate-vCPU-Hours:perCPU') AND (COALESCE("t_scad_cca"."line_item_net_unblended_cost", 0E0) = 0E0)) THEN (CASE WHEN ("t_scad_cca"."line_item_line_item_type" = 'SavingsPlanCoveredUsage') THEN "t_scad_cca"."savings_plan_savings_plan_effective_cost" ELSE "t_scad_cca"."line_item_unblended_cost" END) ELSE 0E0 END)) "net_amortized_split_cpu_cost"
      , SUM((CASE WHEN ((("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-GB-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-GB-Hours')) AND (COALESCE("t_scad_cca"."split_line_item_net_split_cost", 0E0) > 0E0)) THEN ("t_scad_cca"."split_line_item_net_split_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) WHEN ((("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-GB-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-GB-Hours')) AND (COALESCE("t_scad_cca"."split_line_item_net_split_cost", 0E0) = 0E0)) THEN ("t_scad_cca"."split_line_item_split_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%Fargate-GB-Hours') AND (COALESCE("t_scad_cca"."line_item_net_unblended_cost", 0E0) > 0E0)) THEN (CASE WHEN ("t_scad_cca"."line_item_line_item_type" = 'SavingsPlanCoveredUsage') THEN "t_scad_cca"."savings_plan_net_savings_plan_effective_cost" ELSE "t_scad_cca"."line_item_net_unblended_cost" END) WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%Fargate-GB-Hours') AND (COALESCE("t_scad_cca"."line_item_net_unblended_cost", 0E0) = 0E0)) THEN (CASE WHEN ("t_scad_cca"."line_item_line_item_type" = 'SavingsPlanCoveredUsage') THEN "t_scad_cca"."savings_plan_savings_plan_effective_cost" ELSE "t_scad_cca"."line_item_unblended_cost" END) ELSE 0E0 END)) "net_amortized_split_memory_cost"
      , SUM((CASE WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-Accelerator-Hours') AND (COALESCE("t_scad_cca"."split_line_item_net_split_cost", 0E0) > 0E0)) THEN ("t_scad_cca"."split_line_item_net_split_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-Accelerator-Hours') AND (COALESCE("t_scad_cca"."split_line_item_net_split_cost", 0E0) = 0E0)) THEN ("t_scad_cca"."split_line_item_split_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) ELSE 0E0 END)) "net_amortized_split_gpu_cost"
      , SUM((CASE WHEN ((("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-vCPU-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-vCPU-Hours')) AND (COALESCE("t_scad_cca"."split_line_item_net_unused_cost", 0E0) > 0E0)) THEN ("t_scad_cca"."split_line_item_net_unused_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) WHEN ((("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-vCPU-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-vCPU-Hours')) AND (COALESCE("t_scad_cca"."split_line_item_net_unused_cost", 0E0) = 0E0)) THEN ("t_scad_cca"."split_line_item_unused_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) ELSE 0E0 END)) "net_amortized_split_unused_cpu_cost"
      , SUM((CASE WHEN ((("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-GB-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-GB-Hours')) AND (COALESCE("t_scad_cca"."split_line_item_net_unused_cost", 0E0) > 0E0)) THEN ("t_scad_cca"."split_line_item_net_unused_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) WHEN ((("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-GB-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-GB-Hours')) AND (COALESCE("t_scad_cca"."split_line_item_net_unused_cost", 0E0) = 0E0)) THEN ("t_scad_cca"."split_line_item_unused_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) ELSE 0E0 END)) "net_amortized_split_unused_memory_cost"
      , SUM((CASE WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-Accelerator-Hours') AND (COALESCE("t_scad_cca"."split_line_item_net_unused_cost", 0E0) > 0E0)) THEN ("t_scad_cca"."split_line_item_net_unused_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-Accelerator-Hours') AND (COALESCE("t_scad_cca"."split_line_item_net_unused_cost", 0E0) = 0E0)) THEN ("t_scad_cca"."split_line_item_unused_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) ELSE 0E0 END)) "net_amortized_split_unused_gpu_cost"
      , SUM((CASE WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-vCPU-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-vCPU-Hours')) THEN ("t_scad_cca"."split_line_item_public_on_demand_split_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) WHEN ("t_scad_cca"."line_item_usage_type" LIKE '%Fargate-vCPU-Hours:perCPU') THEN (CASE WHEN ("t_scad_cca"."line_item_usage_type" LIKE '%Spot%') THEN "t_scad_cca"."line_item_unblended_cost" ELSE "t_scad_cca"."pricing_public_on_demand_cost" END) ELSE 0E0 END)) "public_on_demand_split_cpu_cost"
      , SUM((CASE WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-GB-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-GB-Hours')) THEN ("t_scad_cca"."split_line_item_public_on_demand_split_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) WHEN ("t_scad_cca"."line_item_usage_type" LIKE '%Fargate-GB-Hours') THEN (CASE WHEN ("t_scad_cca"."line_item_usage_type" LIKE '%Spot%') THEN "t_scad_cca"."line_item_unblended_cost" ELSE "t_scad_cca"."pricing_public_on_demand_cost" END) ELSE 0E0 END)) "public_on_demand_split_memory_cost"
      , SUM((CASE WHEN ("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-Accelerator-Hours') THEN ("t_scad_cca"."split_line_item_public_on_demand_split_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) ELSE 0E0 END)) "public_on_demand_split_gpu_cost"
      , SUM((CASE WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-vCPU-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-vCPU-Hours')) THEN ("t_scad_cca"."split_line_item_public_on_demand_unused_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) ELSE 0E0 END)) "public_on_demand_split_unused_cpu_cost"
      , SUM((CASE WHEN (("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-GB-Hours') OR ("t_scad_cca"."line_item_usage_type" LIKE '%ECS-EC2-GB-Hours')) THEN ("t_scad_cca"."split_line_item_public_on_demand_unused_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) ELSE 0E0 END)) "public_on_demand_split_unused_memory_cost"
      , SUM((CASE WHEN ("t_scad_cca"."line_item_usage_type" LIKE '%EKS-EC2-Accelerator-Hours') THEN ("t_scad_cca"."split_line_item_public_on_demand_unused_cost" * ("t_ec2_compute_instances"."line_item_usage_amount" / "t_ec2_compute_instances_sum_quantity"."line_item_usage_amount")) ELSE 0E0 END)) "public_on_demand_split_unused_gpu_cost"
      FROM
        (("${cur2_database}"."${cur2_table_name}" "t_scad_cca"
      LEFT JOIN (
         SELECT
           "identity_time_interval"
         , "line_item_resource_id"
         , SUM("line_item_usage_amount") "line_item_usage_amount"
         FROM
           "${cur2_database}"."${cur2_table_name}"
         WHERE (("line_item_operation" LIKE '%RunInstances%') AND ("product_product_family" LIKE '%Compute Instance%') AND ("line_item_line_item_type" IN ('DiscountedUsage', 'SavingsPlanCoveredUsage', 'Usage')) AND ((current_date - INTERVAL  '6' MONTH) <= "line_item_usage_start_date"))
         GROUP BY 1, 2
      )  "t_ec2_compute_instances_sum_quantity" ON (("t_scad_cca"."split_line_item_parent_resource_id" = "t_ec2_compute_instances_sum_quantity"."line_item_resource_id") AND ("t_scad_cca"."identity_time_interval" = "t_ec2_compute_instances_sum_quantity"."identity_time_interval")))
      LEFT JOIN (
         SELECT
           "identity_time_interval"
         , "line_item_resource_id"
         , (CASE WHEN ("savings_plan_savings_plan_a_r_n" <> '') THEN 'Savings Plans' WHEN ("reservation_reservation_a_r_n" <> '') THEN 'Reserved Instances' WHEN ("line_item_usage_type" LIKE '%Spot%') THEN 'Spot' ELSE 'On-Demand' END) "purchase_option"
         , ARBITRARY("line_item_availability_zone") "line_item_availability_zone"
         , ARBITRARY("product_instance_type") "product_instance_type"
         , ARBITRARY("product"['instance_type_family']) "product_instance_type_family"
         , ARBITRARY("product_instance_family") "product_instance_family"
         , ARBITRARY(CAST("product"['vcpu'] AS DOUBLE)) "product_vcpu"
         , ARBITRARY(CAST(SPLIT_PART("product"['memory'], ' ', 1) AS DOUBLE)) "product_memory"
         , ARBITRARY(CAST(SPLIT_PART("product"['gpu'], ' ', 1) AS DOUBLE)) "product_gpu"
         , ARBITRARY("product"['operating_system']) "product_operating_system"
         , ARBITRARY((CASE WHEN ("product"['physical_processor'] LIKE '%Intel%') THEN 'Intel' WHEN ("product"['physical_processor'] LIKE '%AMD%') THEN 'AMD' WHEN ("product"['physical_processor'] LIKE '%Graviton%') THEN 'Graviton' WHEN ("product"['physical_processor'] LIKE '%Apple%') THEN 'Apple' END)) "physical_processor_family"
         , ARBITRARY("product"['physical_processor']) "physical_processor"
         , SUM("line_item_usage_amount") "line_item_usage_amount"
         FROM
           "${cur2_database}"."${cur2_table_name}"
         WHERE (("line_item_operation" LIKE '%RunInstances%') AND ("product_product_family" LIKE '%Compute Instance%') AND ("line_item_line_item_type" IN ('DiscountedUsage', 'SavingsPlanCoveredUsage', 'Usage')) AND ((current_date - INTERVAL  '6' MONTH) <= "line_item_usage_start_date"))
         GROUP BY 1, 2, 3
      )  "t_ec2_compute_instances" ON (("t_scad_cca"."split_line_item_parent_resource_id" = "t_ec2_compute_instances"."line_item_resource_id") AND ("t_scad_cca"."identity_time_interval" = "t_ec2_compute_instances"."identity_time_interval")))
      WHERE (((("t_scad_cca"."line_item_operation" IN ('EKSPod-EC2', 'ECSTask-EC2')) AND (NOT ((COALESCE("t_scad_cca"."split_line_item_parent_resource_id", '') = '') AND ("split_line_item_split_cost" = 0E0)))) OR ((("t_scad_cca"."line_item_usage_type" LIKE '%Fargate-vCPU-Hours:perCPU') OR ("t_scad_cca"."line_item_usage_type" LIKE '%Fargate-GB-Hours')) AND ("t_scad_cca"."line_item_line_item_type" IN ('SavingsPlanCoveredUsage', 'Usage')))) AND ((current_date - INTERVAL  '6' MONTH) <= "t_scad_cca"."line_item_usage_start_date"))
      GROUP BY 1, 2, 3, 4, 5, 6
