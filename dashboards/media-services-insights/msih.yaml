dashboards:
  MEDIA SERVICES INSIGHTS:
    dependsOn:
      datasets:
      - msih_reservations
      - msih_view
    name: Media Services Insights
    dashboardId: media-services-insights
    category: Advanced
    theme: MIDNIGHT
    version: v1.1.1
    file: ./msih-definition.yaml
datasets:
  msih_reservations:
    data:
      DataSetId: media-services-insights-reservations
      Name: msih_reservations
      PhysicalTableMap:
        09e670d1-8b16-4a2f-9e17-2d9ef290ec84:
          RelationalTable:
            DataSourceArn: ${athena_datasource_arn}
            Catalog: AwsDataCatalog
            Schema: ${athena_database_name}
            Name: msih_reservations
            InputColumns:
            - Name: reservation_id
              Type: STRING
            - Name: reservation_count
              Type: DECIMAL
              SubType: FLOAT
            - Name: reservation_start_time
              Type: DATETIME
            - Name: reservation_end_time
              Type: DATETIME
            - Name: linked_account_id
              Type: STRING
            - Name: payer_account_id
              Type: STRING
            - Name: line_item_line_item_description
              Type: STRING
            - Name: line_item_usage_type
              Type: STRING
            - Name: video_pipeline
              Type: STRING
            - Name: video_region
              Type: STRING
            - Name: line_item_operation
              Type: STRING
            - Name: video_input
              Type: STRING
            - Name: video_output
              Type: STRING
            - Name: video_resolution
              Type: STRING
            - Name: video_bit_rate
              Type: STRING
            - Name: video_frame_rate
              Type: STRING
            - Name: video_quality
              Type: STRING
            - Name: reservation_fee
              Type: DECIMAL
              SubType: FLOAT
            - Name: effective_rate_adjust
              Type: DECIMAL
              SubType: FLOAT
            - Name: usage_start_time
              Type: DATETIME
            - Name: usage_end_time
              Type: DATETIME
            - Name: reservation_utilization_percent
              Type: DECIMAL
              SubType: FLOAT
            - Name: on_demand_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: reservation_effective_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: effective_od_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: effective_savings
              Type: DECIMAL
              SubType: FLOAT
            - Name: effective_savings_rate
              Type: DECIMAL
              SubType: FLOAT
        481b319c-c8f4-4e82-9ddf-fa705f6cf783:
          RelationalTable:
            DataSourceArn: ${athena_datasource_arn}
            Catalog: AwsDataCatalog
            Schema: ${athena_database_name}
            Name: account_map
            InputColumns:
            - Name: account_id
              Type: STRING
            - Name: account_name
              Type: STRING
        fe517bcf-d790-49f8-b395-b744f079758f:
          RelationalTable:
            DataSourceArn: ${athena_datasource_arn}
            Catalog: AwsDataCatalog
            Schema: ${athena_database_name}
            Name: account_map
            InputColumns:
            - Name: account_id
              Type: STRING
            - Name: account_name
              Type: STRING
      LogicalTableMap:
        24baacd6-be68-44a1-ac29-318cfec3a2d9:
          Alias: account_map_payer
          DataTransforms:
          - RenameColumnOperation:
              ColumnName: account_id
              NewColumnName: account_id[account_map_payer]
          - RenameColumnOperation:
              ColumnName: account_name
              NewColumnName: payer_account_name
          Source:
            PhysicalTableId: fe517bcf-d790-49f8-b395-b744f079758f
        6bab26bf-161f-47a2-9dd7-c83e7d9a20ee:
          Alias: account_map
          DataTransforms:
          - RenameColumnOperation:
              ColumnName: account_id
              NewColumnName: account_id[account_map]
          - RenameColumnOperation:
              ColumnName: account_name
              NewColumnName: linked_account_name
          Source:
            PhysicalTableId: 481b319c-c8f4-4e82-9ddf-fa705f6cf783
        9d41b8af-311f-4f41-9835-e6df45e5e693:
          Alias: Intermediate Table (2)
          DataTransforms:
          - CreateColumnsOperation:
              Columns:
              - ColumnName: payer_account_formatted
                ColumnId: 7bbfe0d0-23b5-4597-9c47-53a253fd264a
                Expression: |-
                  ifelse(
                      strlen({payer_account_name})=0 or {payer_account_name} = {payer_account_id}, {payer_account_id},
                      concat({payer_account_name}, " (", {payer_account_id}, ")")
                  )
          - CreateColumnsOperation:
              Columns:
              - ColumnName: linked_account_formatted
                ColumnId: 2ae7d50b-a8b7-4360-8503-8bff79820039
                Expression: |-
                  ifelse(
                      strlen({linked_account_name})=0 or {linked_account_name} = {linked_account_id}, {linked_account_id},
                      concat({linked_account_name}, " (", {linked_account_id}, ")")
                  )
          - ProjectOperation:
              ProjectedColumns:
              - reservation_id
              - reservation_count
              - reservation_start_time
              - reservation_end_time
              - linked_account_id
              - payer_account_id
              - line_item_line_item_description
              - line_item_usage_type
              - video_pipeline
              - video_region
              - line_item_operation
              - video_input
              - video_output
              - video_resolution
              - video_bit_rate
              - video_frame_rate
              - video_quality
              - reservation_fee
              - effective_rate_adjust
              - usage_start_time
              - usage_end_time
              - reservation_utilization_percent
              - on_demand_cost
              - reservation_effective_cost
              - effective_od_cost
              - effective_savings
              - effective_savings_rate
              - linked_account_name
              - payer_account_name
              - payer_account_formatted
              - linked_account_formatted
          Source:
            JoinInstruction:
              LeftOperand: b36cde4d-cf09-4068-b51f-6d9032eff788
              RightOperand: 24baacd6-be68-44a1-ac29-318cfec3a2d9
              Type: LEFT
              OnClause: '{payer_account_id} = {account_id[account_map_payer]}'
        b36cde4d-cf09-4068-b51f-6d9032eff788:
          Alias: Intermediate Table
          Source:
            JoinInstruction:
              LeftOperand: faff24db-9601-4a15-85e1-4b264d4626c3
              RightOperand: 6bab26bf-161f-47a2-9dd7-c83e7d9a20ee
              Type: LEFT
              OnClause: '{linked_account_id} = {account_id[account_map]}'
        faff24db-9601-4a15-85e1-4b264d4626c3:
          Alias: msih_reservations
          Source:
            PhysicalTableId: 09e670d1-8b16-4a2f-9e17-2d9ef290ec84
      ImportMode: SPICE
    dependsOn:
      views:
      - msih_reservations
      - account_map
      - account_map
    schedules:
    - default
  msih_view:
    data:
      DataSetId: media-services-insights-main
      Name: msih_view
      PhysicalTableMap:
        17740ffc-0df9-4dc9-8780-a77c9dadae18:
          RelationalTable:
            DataSourceArn: ${athena_datasource_arn}
            Catalog: AwsDataCatalog
            Schema: ${athena_database_name}
            Name: msih_view
            InputColumns:
            - Name: year
              Type: STRING
            - Name: month
              Type: STRING
            - Name: billing_period
              Type: DATETIME
            - Name: usage_date
              Type: DATETIME
            - Name: payer_account_id
              Type: STRING
            - Name: linked_account_id
              Type: STRING
            - Name: charge_type
              Type: STRING
            - Name: charge_category
              Type: STRING
            - Name: purchase_option
              Type: STRING
            - Name: ri_sp_arn
              Type: STRING
            - Name: product_code
              Type: STRING
            - Name: product_family
              Type: STRING
            - Name: usage_type
              Type: STRING
            - Name: operation
              Type: STRING
            - Name: item_description
              Type: STRING
            - Name: region
              Type: STRING
            - Name: video_pipeline
              Type: STRING
            - Name: video_flow_direction
              Type: STRING
            - Name: video_bit_rate
              Type: STRING
            - Name: video_tier
              Type: STRING
            - Name: video_codec
              Type: STRING
            - Name: video_frame_rate
              Type: STRING
            - Name: video_quality
              Type: STRING
            - Name: video_resolution
              Type: STRING
            - Name: video_emc_ntm
              Type: STRING
            - Name: video_emc_rts
              Type: STRING
            - Name: video_audio_only
              Type: STRING
            - Name: video_statmux
              Type: STRING
            - Name: video_emc_term
              Type: STRING
            - Name: video_eml_idle
              Type: STRING
            - Name: video_emc_addon
              Type: STRING
            - Name: video_transcoding_result
              Type: STRING
            - Name: location_source
              Type: STRING
            - Name: location_destination
              Type: STRING
            - Name: billing_entity
              Type: STRING
            - Name: pricing_unit
              Type: STRING
            - Name: resource_id
              Type: STRING
            - Name: reservation_id
              Type: STRING
            - Name: last_refresh_date
              Type: DATETIME
            - Name: usage_quantity
              Type: DECIMAL
              SubType: FLOAT
            - Name: unblended_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: net_unblended_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: amortized_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: net_amortized_cost
              Type: DECIMAL
              SubType: FLOAT
            - Name: ri_sp_trueup
              Type: DECIMAL
              SubType: FLOAT
            - Name: ri_sp_upfront_fees
              Type: DECIMAL
              SubType: FLOAT
            - Name: public_cost
              Type: DECIMAL
              SubType: FLOAT
        ca2f9216-c240-4505-9a10-3d7794d2633a:
          RelationalTable:
            DataSourceArn: ${athena_datasource_arn}
            Catalog: AwsDataCatalog
            Schema: ${athena_database_name}
            Name: account_map
            InputColumns:
            - Name: account_id
              Type: STRING
            - Name: account_name
              Type: STRING
        ec2b20b0-73e0-476d-bcb9-7ccd2bcf48db:
          RelationalTable:
            DataSourceArn: ${athena_datasource_arn}
            Catalog: AwsDataCatalog
            Schema: ${athena_database_name}
            Name: account_map
            InputColumns:
            - Name: account_id
              Type: STRING
            - Name: account_name
              Type: STRING
      LogicalTableMap:
        3e96372e-5959-4a5b-a96a-730193e3990b:
          Alias: msih_view
          Source:
            PhysicalTableId: 17740ffc-0df9-4dc9-8780-a77c9dadae18
        43f7b42d-3957-4651-8f5c-278ecd1981cc:
          Alias: account_map_payer
          DataTransforms:
          - RenameColumnOperation:
              ColumnName: account_id
              NewColumnName: account_id[account_map_payer]
          - RenameColumnOperation:
              ColumnName: account_name
              NewColumnName: payer_account_name
          Source:
            PhysicalTableId: ca2f9216-c240-4505-9a10-3d7794d2633a
        577d1b5c-c0f6-4c3b-9e19-073469c8b7b9:
          Alias: Intermediate Table
          Source:
            JoinInstruction:
              LeftOperand: 3e96372e-5959-4a5b-a96a-730193e3990b
              RightOperand: fe50ab11-682a-4611-b7a0-048682763adf
              Type: LEFT
              OnClause: '{linked_account_id} = {account_id}'
        d43506c7-accc-4e0c-9554-60f5c5b75703:
          Alias: Intermediate Table (2)
          DataTransforms:
          - CreateColumnsOperation:
              Columns:
              - ColumnName: linked_account_formatted
                ColumnId: 2a53364b-eea0-4590-9744-d9690ff17d41
                Expression: |-
                  ifelse(
                      strlen({linked_account_name})=0 or {linked_account_name} = {linked_account_id}, {linked_account_id},
                      concat({linked_account_name}, " (", {linked_account_id}, ")")
                  )
          - CreateColumnsOperation:
              Columns:
              - ColumnName: payer_account_formatted
                ColumnId: 4017e6b5-644e-4921-884e-208df6b22443
                Expression: |-
                  ifelse(
                      strlen({payer_account_name})=0 or {payer_account_name}={payer_account_id}, {payer_account_id},
                      concat({payer_account_name}, " (", {payer_account_id}, ")")
                  )
          - ProjectOperation:
              ProjectedColumns:
              - year
              - month
              - billing_period
              - usage_date
              - payer_account_id
              - linked_account_id
              - charge_type
              - charge_category
              - purchase_option
              - ri_sp_arn
              - product_code
              - product_family
              - usage_type
              - operation
              - item_description
              - region
              - video_pipeline
              - video_flow_direction
              - video_bit_rate
              - video_tier
              - video_codec
              - video_frame_rate
              - video_quality
              - video_resolution
              - video_emc_ntm
              - video_emc_rts
              - video_audio_only
              - video_statmux
              - video_emc_term
              - video_eml_idle
              - video_emc_addon
              - video_transcoding_result
              - location_source
              - location_destination
              - billing_entity
              - pricing_unit
              - resource_id
              - reservation_id
              - last_refresh_date
              - usage_quantity
              - unblended_cost
              - net_unblended_cost
              - amortized_cost
              - net_amortized_cost
              - ri_sp_trueup
              - ri_sp_upfront_fees
              - public_cost
              - linked_account_name
              - payer_account_name
              - linked_account_formatted
              - payer_account_formatted
          Source:
            JoinInstruction:
              LeftOperand: 577d1b5c-c0f6-4c3b-9e19-073469c8b7b9
              RightOperand: 43f7b42d-3957-4651-8f5c-278ecd1981cc
              Type: LEFT
              OnClause: '{payer_account_id} = {account_id[account_map_payer]}'
        fe50ab11-682a-4611-b7a0-048682763adf:
          Alias: account_map_linked
          DataTransforms:
          - RenameColumnOperation:
              ColumnName: account_name
              NewColumnName: linked_account_name
          Source:
            PhysicalTableId: ec2b20b0-73e0-476d-bcb9-7ccd2bcf48db
      ImportMode: SPICE
    dependsOn:
      views:
      - msih_view
      - account_map
      - account_map
    schedules:
    - default
crawlers: {}
views:
  msih_reservations:
    dependsOn:
      cur2:
      - bill_payer_account_id
      - line_item_line_item_description
      - line_item_line_item_type
      - line_item_net_unblended_cost
      - line_item_operation
      - line_item_product_code
      - line_item_unblended_cost
      - line_item_usage_account_id
      - line_item_usage_amount
      - line_item_usage_end_date
      - line_item_usage_start_date
      - line_item_usage_type
      - pricing_public_on_demand_cost
      - product
      - reservation_effective_cost
      - reservation_end_time
      - reservation_reservation_a_r_n
      - reservation_start_time
      - product['pipeline']
      - product['frame_rate']
      - product['input']
      - product['output']
      - product['bit_rate']
      - product['resolution']
      - product['video_quality']
      - product['video_codec']
      - product['tier']
      - product['transcoding_result']
      - product['video_frame_rate']
      - product['video_quality_setting']
      - product['video_resolution']
    data: |-
      CREATE OR REPLACE VIEW "${athena_database_name}".msih_reservations AS
      WITH
        core AS (
         SELECT
           "reservation_reservation_a_r_n"
         , "line_item_usage_amount"
         , "line_item_usage_start_date"
         , "line_item_usage_end_date"
         , "line_item_product_code"
         , "line_item_line_item_type"
         , "reservation_start_time"
         , "reservation_end_time"
         , "line_item_usage_account_id"
         , "bill_payer_account_id"
         , "line_item_line_item_description"
         , "line_item_usage_type"
         , "product"
         , "line_item_operation"
         , "line_item_unblended_cost"
         , "line_item_net_unblended_cost"
         , "reservation_effective_cost"
         , "pricing_public_on_demand_cost"
         FROM
           "${cur2_database}".${cur2_table_name}
         WHERE (CAST("line_item_usage_end_date" AS date) >= ("date_trunc"('month', current_timestamp) - INTERVAL  '24' MONTH))
      )
      , eml_ri_inventory AS (
         SELECT
           SPLIT_PART("reservation_reservation_a_r_n", ':', 7) "reservation_id"
         , ROUND(("line_item_usage_amount" / DATE_DIFF('hour', date_trunc('hour', CAST("line_item_usage_start_date" AS timestamp)), date_trunc('hour', CAST("line_item_usage_end_date" AS timestamp))))) "reservation_count"
         , CAST(SPLIT_PART("reservation_start_time", 'T', 1) AS date) "reservation_start_time"
         , CAST(SPLIT_PART("reservation_end_time", 'T', 1) AS date) "reservation_end_time"
         , "line_item_usage_account_id" "linked_account_id"
         , "bill_payer_account_id" "payer_account_id"
         , "line_item_line_item_description"
         , "line_item_usage_type"
         , "product"['pipeline'] "video_pipeline"
         , "product"['region'] "video_region"
         , "line_item_operation"
         , "product"['input'] "video_input"
         , "product"['output'] "video_output"
         , "product"['resolution'] "video_resolution"
         , "product"['bit_rate'] "video_bit_rate"
         , "product"['frame_rate'] "video_frame_rate"
         , "product"['video_quality'] "video_quality"
         , SUM("line_item_unblended_cost") "reservation_fee"
         , ROUND(AVG(((CASE WHEN ("line_item_net_unblended_cost" IS NULL) THEN "line_item_unblended_cost" ELSE "line_item_net_unblended_cost" END) / "line_item_unblended_cost")), 2) "effective_rate_adjust"
         FROM
           "core"
         WHERE ((line_item_product_code = 'AWSElementalMediaLive') AND (line_item_line_item_type = 'RIFee'))
         GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
      )
      , eml_usage AS (
         SELECT
           SPLIT_PART("reservation_reservation_a_r_n", ':', 7) "reservation_id"
         , "line_item_usage_start_date"
         , "line_item_usage_end_date"
         , "line_item_usage_type"
         , ROUND(SUM("line_item_usage_amount"), 2) "total_usage"
         , ROUND(SUM("reservation_effective_cost"), 2) "reservation_effective_cost"
         , ROUND(SUM("pricing_public_on_demand_cost"), 2) "on_demand_cost"
         FROM
           "core"
         WHERE (("line_item_product_code" = 'AWSElementalMediaLive') AND ("line_item_line_item_type" = 'DiscountedUsage'))
         GROUP BY 1, 2, 3, 4
      )
      , eml_reservation_count AS (
         SELECT DISTINCT
           SPLIT_PART("reservation_reservation_a_r_n", ':', 7) "reservation_id"
         , CAST(SPLIT_PART("reservation_start_time", 'T', 1) AS date) "reservation_start_time"
         , CAST(SPLIT_PART("reservation_end_time", 'T', 1) AS date) "reservation_end_time"
         , ROUND(("line_item_usage_amount" / DATE_DIFF('hour', date_trunc('hour', CAST("line_item_usage_start_date" AS timestamp)), date_trunc('hour', CAST("line_item_usage_end_date" AS timestamp))))) "reservation_count"
         FROM
           "core"
         WHERE (("line_item_product_code" = 'AWSElementalMediaLive') AND ("line_item_line_item_type" = 'RIFee'))
      )
      , eml_ri_utilization AS (
         SELECT
           u.*
         , c."reservation_start_time"
         , c."reservation_end_time"
         , ROUND((u."total_usage" / (c."reservation_count" * DATE_DIFF('hour', date_trunc('hour', CAST("line_item_usage_start_date" AS timestamp)), date_trunc('hour', CAST("line_item_usage_end_date" AS timestamp))))), 2) "reservation_utilization_percent"
         FROM
           ("eml_usage" u
         INNER JOIN "eml_reservation_count" c ON ((u."reservation_id" = c."reservation_id") AND ((date_trunc('day', u."line_item_usage_start_date") >= date_trunc('day', c."reservation_start_time")) AND (date_trunc('day', u."line_item_usage_end_date") <= date_trunc('day', c."reservation_end_time")))))
      )
      SELECT
        i.*
      , u."line_item_usage_start_date" "usage_start_time"
      , u."line_item_usage_end_date" "usage_end_time"
      , COALESCE(u."reservation_utilization_percent", 0) "reservation_utilization_percent"
      , "on_demand_cost"
      , "reservation_effective_cost"
      , ROUND(("on_demand_cost" * "effective_rate_adjust"), 4) "effective_od_cost"
      , ROUND((("on_demand_cost" * "effective_rate_adjust") - "reservation_effective_cost"), 4) "effective_savings"
      , ROUND((1 - ("reservation_effective_cost" / ("on_demand_cost" * "effective_rate_adjust"))), 4) "effective_savings_rate"
      FROM
        ("eml_ri_inventory" i
      LEFT JOIN eml_ri_utilization u ON ((i."reservation_id" = u."reservation_id") AND ((date_trunc('day', u."line_item_usage_start_date") >= date_trunc('day', i."reservation_start_time")) AND (date_trunc('day', u."line_item_usage_end_date") <= date_trunc('day', i."reservation_end_time")))))
  msih_view:
    dependsOn:
      cur2:
      - bill_billing_entity
      - bill_billing_period_start_date
      - bill_payer_account_id
      - billing_period
      - line_item_line_item_description
      - line_item_line_item_type
      - line_item_net_unblended_cost
      - line_item_operation
      - line_item_product_code
      - line_item_resource_id
      - line_item_unblended_cost
      - line_item_usage_account_id
      - line_item_usage_amount
      - line_item_usage_start_date
      - line_item_usage_type
      - pricing_public_on_demand_cost
      - pricing_unit
      - product
      - product_from_location
      - product_product_family
      - product_to_location
      - reservation_amortized_upfront_fee_for_billing_period
      - reservation_effective_cost
      - reservation_net_effective_cost
      - reservation_net_unused_amortized_upfront_fee_for_billing_period
      - reservation_net_unused_recurring_fee
      - reservation_reservation_a_r_n
      - reservation_unused_amortized_upfront_fee_for_billing_period
      - reservation_unused_recurring_fee
      - product['pipeline']
      - product['frame_rate']
      - product['input']
      - product['output']
      - product['bit_rate']
      - product['resolution']
      - product['video_quality']
      - product['video_codec']
      - product['tier']
      - product['transcoding_result']
      - product['video_frame_rate']
      - product['video_quality_setting']
      - product['video_resolution']
    data: |-
      CREATE OR REPLACE VIEW "${athena_database_name}".msih_view AS
      WITH
        "cur_base" AS (
         SELECT *
         FROM
           "${cur2_database}"."${cur2_table_name}"
         WHERE (("line_item_product_code" LIKE '%Media%') AND ("line_item_product_code" <> 'AWSElementalMediaStore') AND (NOT ("line_item_product_code" LIKE '%MediaSupport')) AND ("bill_billing_period_start_date" >= (date_trunc('month', current_timestamp) - INTERVAL  '13' MONTH)) AND (CAST(concat("billing_period", '-01') AS date) >= (date_trunc('month', current_date) - INTERVAL  '13' MONTH)) AND (NOT ("line_item_line_item_type" IN ('Tax', 'Refund', 'Credit'))))
      )
      , "cur_pre_processing" AS (
         SELECT
           *
         , split_part("billing_period", '-', 1) "year"
         , split_part("billing_period", '-', 2) "month"
         , (CASE WHEN ("date_trunc"('day', "line_item_usage_start_date") >= ("date_trunc"('day', current_timestamp) - INTERVAL  '30' DAY)) THEN "date_trunc"('hour', "line_item_usage_start_date") WHEN ("date_trunc"('month', "line_item_usage_start_date") >= ("date_trunc"('month', current_timestamp) - INTERVAL  '4' MONTH)) THEN "date_trunc"('day', "line_item_usage_start_date") ELSE "date_trunc"('month', "line_item_usage_start_date") END) "usage_date"
         , (CASE WHEN ("strpos"("pricing_unit", 'Reserved') > 0) THEN 'Reserved' WHEN ("reservation_reservation_a_r_n" <> '') THEN 'Reserved' ELSE 'OnDemand' END) "purchase_option"
         , (CASE WHEN ("reservation_reservation_a_r_n" <> '') THEN "reservation_reservation_a_r_n" ELSE CAST('' AS varchar) END) "ri_sp_arn"
         , (CASE WHEN ("line_item_line_item_type" = 'DiscountedUsage') THEN 'Running_Usage' WHEN ("line_item_line_item_type" = 'Usage') THEN 'Running_Usage' ELSE 'non_usage' END) "charge_category"
         , (CASE WHEN (("line_item_product_code" = 'AWSElementalMediaConvert') AND ("product_product_family" = 'Transcoding') AND (NOT ("line_item_line_item_type" LIKE '%Usage'))) THEN 'CreateJob' ELSE "line_item_operation" END) "operation"
         , SPLIT_PART(reservation_reservation_a_r_n, ':', 7) "reservation_id"
         , (CASE WHEN ("line_item_line_item_type" = 'DiscountedUsage') THEN "reservation_effective_cost" WHEN ("line_item_line_item_type" = 'RIFee') THEN ("reservation_unused_amortized_upfront_fee_for_billing_period" + "reservation_unused_recurring_fee") WHEN (("line_item_line_item_type" = 'Fee') AND ("reservation_reservation_a_r_n" <> '')) THEN 0 ELSE "line_item_unblended_cost" END) "amortized_cost"
         , (CASE WHEN ("line_item_line_item_type" = 'RIFee') THEN COALESCE(("reservation_net_unused_amortized_upfront_fee_for_billing_period" + "reservation_net_unused_recurring_fee"), ("reservation_unused_amortized_upfront_fee_for_billing_period" + "reservation_unused_recurring_fee")) WHEN ("line_item_line_item_type" = 'DiscountedUsage') THEN COALESCE("reservation_net_effective_cost", "reservation_effective_cost") WHEN (("line_item_line_item_type" = 'Fee') AND (COALESCE("reservation_reservation_a_r_n", '') = '')) THEN COALESCE("line_item_net_unblended_cost", "line_item_unblended_cost") WHEN ("line_item_line_item_type" IN ('Usage', 'Tax', 'Credit', 'Refund')) THEN COALESCE("line_item_net_unblended_cost", "line_item_unblended_cost") ELSE 0 END) "net_amortized_cost"
         , (CASE WHEN ("line_item_line_item_type" = 'RIFee') THEN -("reservation_amortized_upfront_fee_for_billing_period") ELSE 0 END) "ri_sp_trueup"
         , (CASE WHEN ("line_item_line_item_type" = 'SavingsPlanUpfrontFee') THEN "line_item_unblended_cost" WHEN (("line_item_line_item_type" = 'Fee') AND ("reservation_reservation_a_r_n" <> '')) THEN "line_item_unblended_cost" ELSE 0 END) "ri_sp_upfront_fees"
         , (CASE WHEN ("line_item_line_item_type" <> 'SavingsPlanNegation') THEN "pricing_public_on_demand_cost" ELSE 0 END) "public_cost"
         , (CASE WHEN (("line_item_product_code" = 'AWSElementalMediaPackage') AND ("line_item_usage_type" LIKE '%-origin-p%-bytes')) THEN 'Packaging Data Transfer' WHEN ("line_item_operation" = 'DataProcessed') THEN 'Data Transfer' WHEN ("line_item_operation" = 'RunningFlow') THEN 'Compute Instance' WHEN ("line_item_operation" = 'CreateJob') THEN 'Transcoding' WHEN ("line_item_operation" = 'reserve') THEN 'Reserved Transcoding' WHEN ("line_item_operation" = 'CHANNEL_BANDWIDTH') THEN 'Data Transfer' WHEN (("line_item_operation" LIKE 'CHANNEL_%PUT') OR ("line_item_operation" LIKE 'INACTIVE_%') OR ("line_item_operation" = 'CHANNEL_Add-on')) THEN 'Transcoding' WHEN ("line_item_usage_type" LIKE '%-Out-Bytes') THEN 'Data Transfer' WHEN (("line_item_usage_type" LIKE '%-ingest-bytes') OR ("line_item_usage_type" LIKE '%-origin-packaging-bytes')) THEN 'Packaging Data Transfer' WHEN ("line_item_usage_type" LIKE '%-AdInsertion') THEN 'Fee' WHEN ("line_item_operation" = 'runChannel') THEN 'Fee' ELSE "product_product_family" END) "product_family"
         , replace(concat('-', "line_item_usage_type", '-'), '-NA-', '--') "line_item_usage_type_norm"
         FROM
           "cur_base"
      )
      , "usage_type_processing" AS (
         SELECT
           *
         , (CASE WHEN (("product_family" <> 'Transcoding') OR ("line_item_product_code" <> 'AWSElementalMediaLive')) THEN null WHEN (strpos("line_item_usage_type_norm", '-EML1-') > 0) THEN 'Single' WHEN (strpos("line_item_usage_type_norm", '-EML2-') > 0) THEN 'Standard' WHEN (strpos("line_item_usage_type_norm", '-EMLA-') > 0) THEN 'EML Anywhere' ELSE null END) "video_pipeline"
         , (CASE WHEN (("product_family" <> 'Transcoding') OR ("line_item_product_code" <> 'AWSElementalMediaLive')) THEN null WHEN (strpos("line_item_usage_type_norm", '-IN-') > 0) THEN 'In' WHEN (strpos("line_item_usage_type_norm", '-OUT-') > 0) THEN 'Out' ELSE null END) "video_flow_direction"
         , (CASE WHEN (("product_family" <> 'Transcoding') OR ("line_item_product_code" <> 'AWSElementalMediaLive')) THEN null ELSE concat(regexp_extract("line_item_usage_type_norm", '-L([0-9]*?)-', 1), ' mbps') END) "video_bit_rate"
         , (CASE WHEN (("product_family" <> 'Transcoding') OR ("line_item_product_code" <> 'AWSElementalMediaConvert')) THEN null WHEN (strpos("line_item_usage_type_norm", '-B-') > 0) THEN 'Basic' WHEN (strpos("line_item_usage_type_norm", '-P-') > 0) THEN 'Professional' ELSE null END) "video_tier"
         , (CASE WHEN ("product_family" <> 'Transcoding') THEN null WHEN (strpos("line_item_usage_type_norm", '-AV1-') > 0) THEN 'AV1' WHEN (strpos("line_item_usage_type_norm", '-AVC-') > 0) THEN 'AVC' WHEN (strpos("line_item_usage_type_norm", '-AVCI-') > 0) THEN 'AVCI' WHEN (strpos("line_item_usage_type_norm", '-HEVC-') > 0) THEN 'HEVC' WHEN (strpos("line_item_usage_type_norm", '-MP2-') > 0) THEN 'MP2' WHEN (strpos("line_item_usage_type_norm", '-VC3-') > 0) THEN 'VC3' WHEN (strpos("line_item_usage_type_norm", '-VP8-') > 0) THEN 'VP8' WHEN (strpos("line_item_usage_type_norm", '-VP9-') > 0) THEN 'VP9' WHEN (strpos("line_item_usage_type_norm", '-XAVC-') > 0) THEN 'XAVC' WHEN (strpos("line_item_usage_type_norm", '-PR-') > 0) THEN 'Apple ProRes' WHEN (strpos("line_item_usage_type_norm", '-AUD-') > 0) THEN 'Audio-only' WHEN (("line_item_product_code" = 'AWSElementalMediaLive') AND (strpos("line_item_usage_type_norm", '-IDLE-') > 0)) THEN null WHEN (("line_item_product_code" = 'AWSElementalMediaLive') AND (strpos("line_item_usage_type_norm", '-AUDIO-') > 0)) THEN 'Audio-only' WHEN ("line_item_product_code" = 'AWSElementalMediaLive') THEN regexp_extract("line_item_usage_type_norm", '(^-.*(OUT|IN)-)(.*)?-', 3) ELSE null END) "video_codec"
         , (CASE WHEN ("product_family" <> 'Transcoding') THEN null WHEN (("line_item_product_code" = 'AWSElementalMediaConvert') AND (strpos("line_item_usage_type_norm", '-30-') > 0)) THEN '<= 30fps' WHEN (("line_item_product_code" = 'AWSElementalMediaConvert') AND (strpos("line_item_usage_type_norm", '-60-') > 0)) THEN '> 30, <= 60 fps' WHEN (("line_item_product_code" = 'AWSElementalMediaConvert') AND (strpos("line_item_usage_type_norm", '-120-') > 0)) THEN '> 60 fps' WHEN ("line_item_product_code" = 'AWSElementalMediaLive') THEN concat(regexp_extract("line_item_usage_type_norm", '-([0-9]*?)-', 1), ' fps') ELSE null END) "video_frame_rate"
         , (CASE WHEN ("product_family" <> 'Transcoding') THEN null WHEN (("line_item_product_code" = 'AWSElementalMediaConvert') AND (strpos("line_item_usage_type_norm", '-MHQ-') > 0)) THEN 'Multi-pass HQ' WHEN (("line_item_product_code" = 'AWSElementalMediaConvert') AND (strpos("line_item_usage_type_norm", '-M-') > 0)) THEN 'Multi-pass' WHEN (("line_item_product_code" = 'AWSElementalMediaConvert') AND (strpos("line_item_usage_type_norm", '-SHQ-') > 0)) THEN 'Single-pass HQ' WHEN (("line_item_product_code" = 'AWSElementalMediaConvert') AND (strpos("line_item_usage_type_norm", '-S-') > 0)) THEN 'Single-pass' WHEN (("line_item_product_code" = 'AWSElementalMediaLive') AND (strpos("line_item_usage_type_norm", '-S-') > 0)) THEN 'Standard' WHEN (("line_item_product_code" = 'AWSElementalMediaLive') AND (strpos("line_item_usage_type_norm", '-E-') > 0)) THEN 'Enhanced' ELSE null END) "video_quality"
         , (CASE WHEN ("product_family" <> 'Transcoding') THEN null WHEN (strpos("line_item_usage_type_norm", '-4K-') > 0) THEN '4K' WHEN (strpos("line_item_usage_type_norm", '-8K-') > 0) THEN '8K' WHEN (strpos("line_item_usage_type_norm", '-SD-') > 0) THEN 'SD' WHEN (strpos("line_item_usage_type_norm", '-HD-') > 0) THEN 'HD' WHEN (strpos("line_item_usage_type_norm", '-HDR10PLUS-') > 0) THEN 'HDR 10+' WHEN (("line_item_product_code" = 'AWSElementalMediaLive') AND (strpos("line_item_usage_type_norm", '-IDLE-') > 0)) THEN null ELSE null END) "video_resolution"
         , (CASE WHEN (("line_item_product_code" = 'AWSElementalMediaConvert') AND (strpos("line_item_usage_type_norm", '-NTM-') > 0)) THEN 'Yes' ELSE null END) "video_emc_ntm"
         , (CASE WHEN (("line_item_product_code" = 'AWSElementalMediaConvert') AND (strpos("line_item_usage_type_norm", '-RTS-') > 0)) THEN 'Yes' ELSE null END) "video_emc_rts"
         , (CASE WHEN ("product_family" <> 'Transcoding') THEN null WHEN (("line_item_product_code" = 'AWSElementalMediaConvert') AND (strpos("line_item_usage_type_norm", '-AUD-') > 0)) THEN 'Yes' WHEN (("line_item_product_code" = 'AWSElementalMediaConvert') AND (strpos("line_item_usage_type_norm", '-DTS-') > 0)) THEN 'Yes' WHEN (("line_item_product_code" = 'AWSElementalMediaConvert') AND (strpos("line_item_usage_type_norm", '-DOLBY-') > 0)) THEN 'Yes' WHEN ("line_item_product_code" = 'AWSElementalMediaConvert') THEN null WHEN (("line_item_product_code" = 'AWSElementalMediaLive') AND (strpos("line_item_usage_type_norm", '-AUDIO-') > 0)) THEN 'Yes' ELSE null END) "video_audio_only"
         , (CASE WHEN (("line_item_product_code" = 'AWSElementalMediaLive') AND (strpos("line_item_usage_type_norm", '-MUX-') > 0)) THEN 'Yes' ELSE null END) "video_statmux"
         , (CASE WHEN (("line_item_product_code" = 'AWSElementalMediaConvert') AND (strpos("line_item_usage_type_norm", '-Y-') > 0)) THEN 'Yearly' ELSE null END) "video_emc_term"
         , (CASE WHEN (("line_item_product_code" = 'AWSElementalMediaLive') AND (strpos("line_item_usage_type_norm", '-IDLE-') > 0)) THEN 'Yes' ELSE null END) "video_eml_idle"
         , (CASE WHEN (("product_family" <> 'Transcoding') OR ("line_item_product_code" <> 'AWSElementalMediaConvert')) THEN null WHEN (strpos("line_item_usage_type_norm", '-GIF-') > 0) THEN 'Animated GIF' WHEN (strpos("line_item_usage_type_norm", '-DTS-') > 0) THEN 'Audio normalization' WHEN (strpos("line_item_usage_type_norm", '-DOLBY-') > 0) THEN 'Dolby Audio' WHEN (strpos("line_item_usage_type_norm", '-DOLBY_VIS-') > 0) THEN 'Dolby Vision' WHEN (strpos("line_item_usage_type_norm", '-FRAMEFORMER-') > 0) THEN 'FrameFormer' WHEN (strpos("line_item_usage_type_norm", '-KANTAR-') > 0) THEN 'Kantar watermarking' WHEN (strpos("line_item_usage_type_norm", '-PROBE-') > 0) THEN 'MediaConvert Probe' WHEN (strpos("line_item_usage_type_norm", '-NEXGUARD-') > 0) THEN 'NexGuard watermarking' WHEN (strpos("line_item_usage_type_norm", '-NIELSEN_SID_TIC-') > 0) THEN 'Nielsen watermarking' ELSE null END) "video_emc_addon"
         FROM
           "cur_pre_processing"
      )
      SELECT
        "year"
      , "month"
      , "bill_billing_period_start_date" "billing_period"
      , "usage_date"
      , "bill_payer_account_id" "payer_account_id"
      , "line_item_usage_account_id" "linked_account_id"
      , "line_item_line_item_type" "charge_type"
      , "charge_category"
      , "purchase_option"
      , "ri_sp_arn"
      , "line_item_product_code" "product_code"
      , "product_family"
      , "line_item_usage_type" "usage_type"
      , "operation"
      , "line_item_line_item_description" "item_description"
      , "product"['region'] "region"
      , "video_pipeline"
      , "video_flow_direction"
      , "video_bit_rate"
      , (CASE WHEN (length("video_emc_addon") > 0) THEN 'Professional' ELSE "video_tier" END) "video_tier"
      , "video_codec"
      , "video_frame_rate"
      , "video_quality"
      , "video_resolution"
      , "video_emc_ntm"
      , "video_emc_rts"
      , "video_audio_only"
      , "video_statmux"
      , "video_emc_term"
      , "video_eml_idle"
      , "video_emc_addon"
      , "product"['transcoding_result'] "video_transcoding_result"
      , "product_from_location" "location_source"
      , "product_to_location" "location_destination"
      , "bill_billing_entity" "billing_entity"
      , "pricing_unit" "pricing_unit"
      , "line_item_resource_id" "resource_id"
      , "reservation_id"
      , "last_refresh_date"
      , sum("line_item_usage_amount") "usage_quantity"
      , sum("line_item_unblended_cost") "unblended_cost"
      , sum("line_item_net_unblended_cost") "net_unblended_cost"
      , sum("amortized_cost") "amortized_cost"
      , sum("net_amortized_cost") "net_amortized_cost"
      , sum("ri_sp_trueup") "ri_sp_trueup"
      , sum("ri_sp_upfront_fees") "ri_sp_upfront_fees"
      , sum("public_cost") "public_cost"
      FROM
        ("usage_type_processing"
      INNER JOIN (
         SELECT
           "bill_payer_account_id" "payer_account_id"
         , MAX("line_item_usage_start_date") "last_refresh_date"
         FROM
           "cur_base"
         WHERE ("line_item_usage_start_date" <= (date_trunc('day', current_timestamp) - INTERVAL  '0' DAY))
         GROUP BY 1
      )  ts ON ("bill_payer_account_id" = "payer_account_id"))
      GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39
